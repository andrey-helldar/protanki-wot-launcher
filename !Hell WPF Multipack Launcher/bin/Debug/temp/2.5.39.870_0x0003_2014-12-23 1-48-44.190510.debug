{
  "uid": "f39d3705d0925c26120f42599dc7d336",
  "version": "2.5.39.870",
  "date": "2014-12-23 1-48-44",
  "module": "App.xaml",
  "function": "CurrentDomain_UnhandledException",
  "param0": "System.NullReferenceException: Ссылка на объект не указывает на экземпляр объекта.\r\n   в _Hell_WPF_Multipack_Launcher.MainWindow.Button_Click_2(Object sender, RoutedEventArgs e) в f:\\ВАЖНЫЕ ДАННЫЕ\\!!Важные документы\\!Сохранения программ\\Visual Studio C#\\!Hell PRO Tanki Launcher\\!Hell WPF Multipack Launcher\\MainWindow.xaml.cs:строка 862\r\n   в System.Windows.EventRoute.InvokeHandlersImpl(Object source, RoutedEventArgs args, Boolean reRaised)\r\n   в System.Windows.UIElement.RaiseEventImpl(DependencyObject sender, RoutedEventArgs args)\r\n   в System.Windows.Controls.Button.OnClick()\r\n   в System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(MouseButtonEventArgs e)\r\n   в System.Windows.RoutedEventArgs.InvokeHandler(Delegate handler, Object target)\r\n   в System.Windows.EventRoute.InvokeHandlersImpl(Object source, RoutedEventArgs args, Boolean reRaised)\r\n   в System.Windows.UIElement.ReRaiseEventAs(DependencyObject sender, RoutedEventArgs args, RoutedEvent newEvent)\r\n   в System.Windows.RoutedEventArgs.InvokeHandler(Delegate handler, Object target)\r\n   в System.Windows.EventRoute.InvokeHandlersImpl(Object source, RoutedEventArgs args, Boolean reRaised)\r\n   в System.Windows.UIElement.RaiseEventImpl(DependencyObject sender, RoutedEventArgs args)\r\n   в System.Windows.UIElement.RaiseTrustedEvent(RoutedEventArgs args)\r\n   в System.Windows.Input.InputManager.ProcessStagingArea()\r\n   в System.Windows.Input.InputProviderSite.ReportInput(InputReport inputReport)\r\n   в System.Windows.Interop.HwndMouseInputProvider.ReportInput(IntPtr hwnd, InputMode mode, Int32 timestamp, RawMouseActions actions, Int32 x, Int32 y, Int32 wheel)\r\n   в System.Windows.Interop.HwndMouseInputProvider.FilterMessage(IntPtr hwnd, WindowMessage msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\r\n   в System.Windows.Interop.HwndSource.InputFilterMessage(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\r\n   в MS.Win32.HwndWrapper.WndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\r\n   в MS.Win32.HwndSubclass.DispatcherCallbackOperation(Object o)\r\n   в System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)\r\n   в MS.Internal.Threading.ExceptionFilterHelper.TryCatchWhen(Object source, Delegate method, Object args, Int32 numArgs, Delegate catchHandler)\r\n   в System.Windows.Threading.Dispatcher.LegacyInvokeImpl(DispatcherPriority priority, TimeSpan timeout, Delegate method, Object args, Int32 numArgs)\r\n   в MS.Win32.HwndSubclass.SubclassWndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam)\r\n   в MS.Win32.UnsafeNativeMethods.DispatchMessage(MSG& msg)\r\n   в System.Windows.Threading.Dispatcher.PushFrameImpl(DispatcherFrame frame)\r\n   в System.Windows.Application.RunInternal(Window window)\r\n   в System.Windows.Application.Run()\r\n   в _Hell_WPF_Multipack_Launcher.App.Main() в f:\\ВАЖНЫЕ ДАННЫЕ\\!!Важные документы\\!Сохранения программ\\Visual Studio C#\\!Hell PRO Tanki Launcher\\!Hell WPF Multipack Launcher\\obj\\Debug\\App.g.cs:строка 0\r\n   в System.AppDomain._nExecuteAssembly(RuntimeAssembly assembly, String[] args)\r\n   в Microsoft.VisualStudio.HostingProcess.HostProc.RunUsersAssembly()\r\n   в System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   в System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   в System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   в System.Threading.ThreadHelper.ThreadStart()"
}