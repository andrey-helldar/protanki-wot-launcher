{
  "uid": "f39d3705d0925c26120f42599dc7d336",
  "version": "2.4.34.721",
  "date": "2014-11-23 11-20-46",
  "module": "POST.Class",
  "function": "Send()",
  "param0": "json: http://n.helldar.ru/api/wot/info",
  "param1": "Data: &data=u=f39d3705d0925c26120f42599dc7d336",
  "param2": "Answer: <!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <title>AI RUS - Профессиональная IT поддержка</title>\r\n        <link rel=\"shortcut icon\" href=\"http://n.helldar.ru/templates/ai-rus_6/img/favicon.ico\" />\r\n        <link rel=\"stylesheet\" href=\"http://n.helldar.ru/templates/ai-rus_6/style/boilerplate.css\">\r\n        <link rel=\"stylesheet\" href=\"http://n.helldar.ru/templates/ai-rus_6/style/main_offline.css\">\r\n        <meta charset=\"utf-8\">\r\n        <meta name=\"viewport\" content=\"initial-scale = 1.0,maximum-scale = 1.0\">\r\n        <script>var __adobewebfontsappname__ = \"reflow\"</script>\r\n    </head>\r\n    <body>\r\n\r\n        <div id=\"primaryContainer\" class=\"primaryContainer clearfix\">\r\n            <div id=\"box\" class=\"clearfix\">\r\n                <div id=\"Box\" class=\"clearfix\">\r\n                    <div id=\"box1\" class=\"clearfix\">\r\n                        <div id=\"box2\" class=\"clearfix\"></div>\r\n                        <div id=\"box3\" class=\"clearfix\"><p id=\"text\">-</p></div>\r\n                        <div id=\"box4\" class=\"clearfix\"><p id=\"text1\">-</p></div>\r\n                        <div id=\"box5\" class=\"clearfix\"></div>\r\n                    </div>\r\n                    <div id=\"box6\" class=\"clearfix\">\r\n                        <a href=\"/\"><img id=\"image\" src=\"http://n.helldar.ru/templates/ai-rus_6/img/logotype.png\" class=\"image\" />\r\n                            <p id=\"text2\">\r\n                                AI RUS - Профессиональная IT поддержка\r\n                            </p>\r\n                        </a>\r\n                    </div>\r\n                    <div id=\"box7\" class=\"clearfix\">\r\n                        <p id=\"text3\">\r\n                            <sup><small>&#x2b;7 &#x28;924&#x29;</small></sup> 475-888-9\r\n                        </p>\r\n                        <p id=\"text4\">\r\n                            ЧИТА, ул. ШИЛОВА 19\r\n                        </p>\r\n                        <p id=\"text5\">\r\n                            Мы работаем с 8<sup><small>00</small></sup> до 19<sup><small>00</small></sup>\r\n                        </p>\r\n                        <p id=\"text6\">\r\n                            Выходные: суббота, воскресенье<br />\r\n                        </p>\r\n                    </div>\r\n                    <div id=\"box8\" class=\"clearfix\">\r\n                    </div>\r\n                </div>\r\n                <div id=\"box9\" class=\"clearfix\">                \r\n                    <div id=\"box10\" class=\"clearfix\">\r\n                        <p id=\"text9\">\r\n                            САЙТ ВРЕМЕННО НЕДОСТУПЕН<br>\r\n                            <sub>по причине:</sub>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div id=\"box11\" class=\"clearfix\">Сайт на реконструкции</div>\r\n                <div id=\"box12\" class=\"clearfix\">\r\n                    <div id=\"box13\" class=\"clearfix\">\r\n                        <p id=\"text11\">\r\n                            2012-2014 &copy; <a href=\"/\">&laquo;AI RUS - Профессиональная IT поддержка&raquo;</a>\r\n                        </p>\r\n                    </div>\r\n                    <div id=\"box14\" class=\"clearfix\">\r\n                        <p id=\"text13\">\r\n                            Наш адрес: 672007, Россия, г. Чита, ул. Шилова, 19\r\n                        </p>\r\n                        <p id=\"text14\">\r\n                            <a href=\"mailto:info@ai-rus.com\">Приемная</a>, \r\n                            <a href=\"mailto:support@ai-rus.com\">техническая поддержка</a>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </body>\r\n</html>"
}