<Application x:Class="_Hell_WPF_Multipack_Launcher.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <!-- *******************************
                    FONTS
            *********************************-->
        <FontFamily x:Key="FontMicra">pack://application:,,,/Fonts/#Micra</FontFamily>
        <FontFamily x:Key="FontSochi2014">pack://application:,,,/Fonts/#Sochi2014</FontFamily>

        <Style x:Key="FontSochi" TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="{StaticResource FontSochi2014}"/>
        </Style>


        <!-- *******************************
                    BUTTON backgrounds
            *********************************-->
        <Color x:Key="GlobalTextColor">#FF006699</Color>


        <SolidColorBrush x:Key="BackNormal" Color="#FF006699" />
        <SolidColorBrush x:Key="BackHover" Color="#FF007AFF" />
        <SolidColorBrush x:Key="BackPressed" Color="#FF004C9E" />

        <!--Control colors.-->
        <Color x:Key="ControlLightColor">#60d04c42</Color>
        <Color x:Key="ControlMediumColor">#FF9D9A97</Color>

        <!--Border colors-->
        <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
        <Color x:Key="BorderMediumColor">#FF888888</Color>
        <Color x:Key="BorderDarkColor">#FF444444</Color>

        <Color x:Key="PressedBorderLightColor">#FF888888</Color>
        <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

        <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
        <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

        <!--Control-specific resources.-->
        <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#00d04c42"
                    Offset="0" />
                    <GradientStop Color="#80EC4437"
                    Offset="0.4" />
                    <GradientStop Color="#80EC4437"
                    Offset="0.6" />
                    <GradientStop Color="#00d04c42"
                    Offset="1" />
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>


        <!-- *******************************
                     LOADING PAGE
            *********************************-->
        <Style TargetType="StackPanel" x:Key="LoadingPage">
            <Style.Resources>
                <Style TargetType="Control">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <StackPanel Background="#FFF300FF" Margin="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="300" Height="300" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Style.Resources>
        </Style>


        <!-- *******************************
                     LOGOTYPE
            *********************************-->
        <Style x:Key="ButtonStyleLogotype" TargetType="{x:Type Button}">
            <Setter Property="Cursor" Value="Hand"/>

            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Margin="0">
                            <Path Stretch="Fill" x:Name="PlayBackground"
                                    Data="M10,20 L10,10 43,10 L43,20 Z"
                                    Stroke="Transparent"
                                    StrokeThickness="1"
                                    SnapsToDevicePixels="True"
                                    Cursor="Hand">
                            </Path>
                            <ContentPresenter Name="content" 
                                        HorizontalAlignment="Stretch" 
                                        VerticalAlignment="Stretch"
                                        Margin="0"
                                        Cursor="Hand"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Fill" TargetName="PlayBackground">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Resources/wot_emblem.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Fill" TargetName="PlayBackground">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Resources/wot_emblem_pressed.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <!-- *******************************
                     AI RUS link
            *********************************-->
        <Style x:Key="ButtonStyleAIRUS" TargetType="{x:Type Button}">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Margin="0">
                            <Rectangle x:Name="AIRUSBackground" Fill="Transparent" Opacity="0.5" Cursor="Hand"/>
                            <ContentPresenter Name="content" 
                                        HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"
                                        Margin="15"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="AIRUSBackground">
                                    <Setter.Value>
                                        <RadialGradientBrush>
                                            <GradientStop Color="Transparent" Offset="0"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="AIRUSBackground">
                                    <Setter.Value>
                                        <RadialGradientBrush>
                                            <GradientStop Color="Transparent" Offset="0"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <!-- *******************************
                        PLAY
        http://social.msdn.microsoft.com/Forums/vstudio/en-US/6fd5a857-d6cd-4f25-9008-ff368516088a/change-button-background-image-using-triggers-wpf?forum=wpf
        
        http://social.msdn.microsoft.com/Forums/vstudio/en-US/ea8fa494-9535-48fb-8f7f-3c4baacbe86e/change-the-image-inside-a-button-when-the-button-is-clicked-using-xaml-trigger?forum=wpf
            *********************************-->
        <Style x:Key="ButtonStylePlay" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="#4C000000"/>
            <Setter Property="FontSize" Value="20px"/>
            <Setter Property="FontFamily" Value="{StaticResource FontMicra}"/>
            <Setter Property="HorizontalContentAlignment" Value="Right"/>

            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Margin="0">
                            <Path Stretch="Fill" x:Name="PlayBackground"
                                    Data="M0,20 L10,10 43,10 L43,20 Z"
                                    Stroke="Black"
                                    StrokeThickness="0"
                                    SnapsToDevicePixels="True"
                                    Cursor="Hand">
                            </Path>
                            <ContentPresenter Name="content" 
                                        HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"
                                        Margin="15"
                                        Cursor="Hand"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="true">
                                <Setter Property="Fill" TargetName="PlayBackground">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Resources/play_normal.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="PlayBackground">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Resources/play_hover.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Fill" TargetName="PlayBackground">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Resources/play_press.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <!-- *******************************
                        CLOSE
            *********************************-->
        <Style x:Key="ButtonStyleClose" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="18"/>
            <Setter Property="Height" Value="19"/>
            
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Margin="0">
                            <Path Stretch="Fill" x:Name="PlayBackground"
                                    Data="M10,20 L10,10 43,10 L43,20 Z"
                                    Stroke="Red"
                                    StrokeThickness="0"
                                    SnapsToDevicePixels="True"
                                    Cursor="Hand">
                            </Path>
                            <ContentPresenter Name="content" 
                                        HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"
                                        Margin="15"
                                        Cursor="Hand"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="true">
                                <Setter Property="Fill" TargetName="PlayBackground">
                                    <Setter.Value>
                                        <!--<ImageBrush ImageSource="Resources/close_normal.png"/>-->
                                        <ImageBrush ImageSource="{x:Null}"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="PlayBackground">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Resources/close_hover.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="PlayBackground">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Resources/close_press.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- *******************************
                        MINIMIZE
            *********************************-->
        <Style x:Key="ButtonStyleMin" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="22"/>
            <Setter Property="Height" Value="19"/>
            
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Margin="0">
                            <Path Stretch="Fill" x:Name="PlayBackground"
                                    Data="M10,20 L10,10 43,10 L43,20 Z"
                                    Stroke="Red"
                                    StrokeThickness="0"
                                    SnapsToDevicePixels="True"
                                    Cursor="Hand">
                            </Path>
                            <ContentPresenter Name="content" 
                                        HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"
                                        Margin="15"
                                        Cursor="Hand"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="true">
                                <Setter Property="Fill" TargetName="PlayBackground">
                                    <Setter.Value>
                                        <!--<ImageBrush ImageSource="Resources/minimize_normal.png"/>-->
                                        <ImageBrush ImageSource="{x:Null}"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="PlayBackground">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Resources/minimize_hover.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="PlayBackground">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Resources/minimize_press.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <!-- *******************************
                        VIDEO TURN LEFT
            *********************************-->
        <Style x:Key="ButtonStyleVideoLeft" TargetType="{x:Type Button}">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Margin="0">
                            <Rectangle x:Name="VideoLeftBackground" Fill="Red" Opacity="0.5" Cursor="Hand"/>
                            <ContentPresenter Name="content" 
                                        HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"
                                        Margin="15"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="VideoLeftBackground">
                                    <Setter.Value>
                                        <RadialGradientBrush>
                                            <GradientStop Color="#FFccd9d9" Offset="0"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="VideoLeftBackground">
                                    <Setter.Value>
                                        <RadialGradientBrush>
                                            <GradientStop Color="#FFccd9d9" Offset="0"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <!-- *******************************
                        VIDEO TURN RIGHT
            *********************************-->
        <Style x:Key="ButtonStyleVideoRight" TargetType="{x:Type Button}">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Margin="0">
                            <Rectangle x:Name="RightBackground" Fill="Red" Opacity="0.5" Cursor="Hand"/>
                            <ContentPresenter Name="content" 
                                        HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"
                                        Margin="15"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="RightBackground">
                                    <Setter.Value>
                                        <RadialGradientBrush>
                                            <GradientStop Color="#FFccd9d9" Offset="0"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="RightBackground">
                                    <Setter.Value>
                                        <RadialGradientBrush>
                                            <GradientStop Color="#FFccd9d9" Offset="0"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <!-- *******************************
                        GENERAL
            *********************************-->


        <!-- *******************************
                        MINIMIZE
            *********************************-->
        <Style x:Key="ButtonStyleOptimize" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Margin="0">
                            <Path Stretch="Fill" x:Name="PlayBackground"
                                    Data="M10,20 L10,10 43,10 L43,20 Z"
                                    Stroke="Black"
                                    StrokeThickness="0"
                                    SnapsToDevicePixels="True"
                                    Cursor="Hand">
                            </Path>
                            <ContentPresenter Name="content" 
                                        HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"
                                        Margin="15"
                                        Cursor="Hand"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="true">
                                <Setter Property="Fill" TargetName="PlayBackground">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Resources/General_Optimize_normal.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="PlayBackground">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Resources/General_Optimize_hover.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="PlayBackground">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Resources/General_Optimize_pressed.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- *******************************
                        FEEDBACK
            *********************************-->
        <Style x:Key="ButtonStyleFeedback" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="41"/>
            <Setter Property="Height" Value="30"/>
            
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Margin="0">
                            <Path Stretch="Fill" x:Name="PlayBackground"
                                    Data="M10,20 L10,10 43,10 L43,20 Z"
                                    Stroke="Black"
                                    StrokeThickness="0"
                                    SnapsToDevicePixels="True"
                                    Cursor="Hand">
                            </Path>
                            <ContentPresenter Name="content" 
                                        HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"
                                        Margin="15"
                                        Cursor="Hand"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="true">
                                <Setter Property="Fill" TargetName="PlayBackground">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Resources/General_Feedback_normal.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="PlayBackground">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Resources/General_Feedback_hover.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="PlayBackground">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Resources/General_Feedback_press.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- *******************************
                        SETTINGS
            *********************************-->
        <Style x:Key="ButtonStyleSettings" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Margin="0">
                            <Path Stretch="Fill" x:Name="PlayBackground"
                                    Data="M10,20 L10,10 43,10 L43,20 Z"
                                    Stroke="Black"
                                    StrokeThickness="0"
                                    SnapsToDevicePixels="True"
                                    Cursor="Hand">
                            </Path>
                            <ContentPresenter Name="content" 
                                        HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"
                                        Margin="15"
                                        Cursor="Hand"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="true">
                                <Setter Property="Fill" TargetName="PlayBackground">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Resources/General_Settings_normal.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="PlayBackground">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Resources/General_Settings_hover.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="PlayBackground">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Resources/General_Settings_press.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- *******************************
                        ABOUT
            *********************************-->
        <Style x:Key="ButtonStyleAbout" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="20"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Margin" Value="0,9,8,5"/>
            <Setter Property="Cursor" Value="Hand"/>
            
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Margin="0">
                            <Path Stretch="Fill" x:Name="PlayBackground"
                                    Data="M10,20 L10,10 43,10 L43,20 Z"
                                    Stroke="Black"
                                    StrokeThickness="0"
                                    SnapsToDevicePixels="True"
                                    Cursor="Hand">
                            </Path>
                            <ContentPresenter Name="content" 
                                        HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"
                                        Margin="15"
                                        Cursor="Hand"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                           <Trigger Property="IsEnabled" Value="true">
                                <Setter Property="Fill" TargetName="PlayBackground">
                                    <Setter.Value>
                                        <!--<ImageBrush ImageSource="Resources/General_Profile_normal.png"/>-->
                                        <ImageBrush ImageSource="{x:Null}"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="PlayBackground">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Resources/General_Profile_hover.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="PlayBackground">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Resources/General_Profile_pressed.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- *******************************
                        UPDATE
            *********************************-->
        <Style x:Key="ButtonStyleUpdate" TargetType="{x:Type Button}">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Margin="0">
                            <Rectangle x:Name="UpdateBackground" Fill="Red" Opacity="0.5" Cursor="Hand"/>
                            <ContentPresenter Name="content" 
                                        HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"
                                        Margin="15"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="UpdateBackground">
                                    <Setter.Value>
                                        <RadialGradientBrush>
                                            <GradientStop Color="#FFccd9d9" Offset="0"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="UpdateBackground">
                                    <Setter.Value>
                                        <RadialGradientBrush>
                                            <GradientStop Color="#FFccd9d9" Offset="0"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- *******************************
                        FAQ
            *********************************-->
        <Style x:Key="ButtonStyleFAQ" TargetType="{x:Type Button}">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Margin="0">
                            <Rectangle x:Name="FAQBackground" Fill="Red" Opacity="0.5" Cursor="Hand"/>
                            <ContentPresenter Name="content" 
                                        HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"
                                        Margin="15"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="FAQBackground">
                                    <Setter.Value>
                                        <RadialGradientBrush>
                                            <GradientStop Color="#FFccd9d9" Offset="0"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="FAQBackground">
                                    <Setter.Value>
                                        <RadialGradientBrush>
                                            <GradientStop Color="#FFccd9d9" Offset="0"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- *******************************
                        FAQ
            *********************************-->
        <Style x:Key="LabelStyleHeaderWhite" TargetType="{x:Type Label}">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Label">
                        <Border>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="true">
                                <Setter Property="Foreground" Value="White" />
                                <Setter Property="FontSize" Value="18" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- *******************************
                        HEADER
            *********************************-->
        <Style x:Key="LabelStyleHeaderBlack" TargetType="{x:Type Label}">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Label">
                        <Border>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="true">
                                <Setter Property="FontFamily" Value="Sochi2014" />
                                <Setter Property="Foreground" Value="#FF585654" />
                                <Setter Property="FontSize" Value="14pt" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <!-- *******************************
                        TEXT
            *********************************-->
        <Style x:Key="LabelStyleTextBlack" TargetType="{x:Type Label}">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Label">
                        <Border>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True" />
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="true">
                                <Setter Property="FontFamily" Value="Sochi2014" />
                                <Setter Property="Foreground" Value="#FF585654" />
                                <Setter Property="FontSize" Value="14px" />
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>





        <!-- *******************************
                        Status label
            *********************************-->
        <Style x:Key="LabelStyleStatus" TargetType="{x:Type Label}">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Label">
                        <Border>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="true">
                                <Setter Property="FontFamily" Value="Sochi2014" />
                                <Setter Property="Foreground" Value="White" />
                                <Setter Property="FontSize" Value="20px" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>





        <!-- *******************************
                        LISTBOX 
            *********************************-->
        <Style x:Key="ListBoxGeneral" TargetType="{x:Type ListBox}">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0,9,-4,9"/>
        </Style>

        <Style x:Key="ListBoxItemGeneral" TargetType="{x:Type ListBoxItem}">
            <Setter Property="BorderThickness" Value="0,1,0,0"/>
            <Setter Property="BorderBrush" Value="#FF363534"/>
            <Setter Property="Margin" Value="0,2,0,0" />
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Width" Value="244" />
            <Setter Property="Height" Value="74"/>
            <Setter Property="Opacity" Value="0.9"/>


            <Setter Property="Template">
                <Setter.Value>
                    <!-- Применяем стили для элементов внутри ListBox -->
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <!--<Border Background="{TemplateBinding Background}" 
                                          BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Border BorderBrush="#FF5c5a58" BorderThickness="0,1,0,0" Margin="0">-->
                        <Border Background="{TemplateBinding Background}" Margin="0,0,-10,0" BorderThickness="0" HorizontalAlignment="Stretch">
                                <ContentPresenter/>
                        </Border>
                        <!--</Border>
                        </Border>-->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#66FFFFFF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Label date-->
        <Style x:Key="ListBoxLabelGeneral" TargetType="{x:Type Label}">
            <Setter Property="FontFamily" Value="Verdana"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="#FFc5401e"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
        </Style>

        <!--Button play-->
        <Style x:Key="ListBoxPlayGeneral" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="14"/>
            <Setter Property="Height" Value="14"/>
            <Setter Property="Margin" Value="117,5,0,0"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>

            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Margin="0">
                            <Path Stretch="Fill" x:Name="PlayBackground"
                                    Data="M10,20 L10,10 43,10 L43,20 Z"
                                    Stroke="Black"
                                    StrokeThickness="0"
                                    SnapsToDevicePixels="True"
                                    Cursor="Hand"
                                  Width="14"
                                  Height="14"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Control.IsEnabled" Value="True" />
                                    <Condition Property="Button.IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Rectangle.Fill" TargetName="PlayBackground">
                                        <Setter.Value>
                                            <ImageBrush ImageSource="Resources/General_News_Close_hover.png"/>
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger.Setters>
                            </MultiTrigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Control.IsEnabled" Value="True" />
                                    <Condition Property="Button.IsMouseOver" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Rectangle.Fill" TargetName="PlayBackground">
                                        <Setter.Value>
                                            <ImageBrush ImageSource="Resources/General_News_Close_normal.png"/>
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger.Setters>
                            </MultiTrigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Control.IsEnabled" Value="True" />
                                    <Condition Property="Button.IsPressed" Value="True" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Rectangle.Fill" TargetName="PlayBackground">
                                        <Setter.Value>
                                            <ImageBrush ImageSource="Resources/General_News_Close_pressed.png"/>
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Button close-->
        <Style x:Key="ListBoxCloseGeneral" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="14"/>
            <Setter Property="Height" Value="14"/>
            <Setter Property="Margin" Value="70,5,0,0"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>

            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Margin="0">
                            <Path Stretch="Fill" x:Name="CloseBackground"
                                    Data="M10,20 L10,10 43,10 L43,20 Z"
                                    Stroke="Black"
                                    StrokeThickness="0"
                                    SnapsToDevicePixels="True"
                                    Cursor="Hand"
                                  Width="14"
                                  Height="14"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Control.IsEnabled" Value="True" />
                                    <Condition Property="Button.IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Rectangle.Fill" TargetName="CloseBackground">
                                        <Setter.Value>
                                            <ImageBrush ImageSource="Resources/General_News_Close_hover.png"/>
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger.Setters>
                            </MultiTrigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Control.IsEnabled" Value="True" />
                                    <Condition Property="Button.IsMouseOver" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Rectangle.Fill" TargetName="CloseBackground">
                                        <Setter.Value>
                                            <ImageBrush ImageSource="Resources/General_News_Close_normal.png"/>
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger.Setters>
                            </MultiTrigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Control.IsEnabled" Value="True" />
                                    <Condition Property="Button.IsPressed" Value="True" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Rectangle.Fill" TargetName="CloseBackground">
                                        <Setter.Value>
                                            <ImageBrush ImageSource="Resources/General_News_Close_pressed.png"/>
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--TextBlock title-->
        <Style x:Key="ListBoxTitleGeneral" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="#FF006699"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
            <Setter Property="Margin" Value="5,30,15,5"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
        </Style>

        <!--TextBlock Hyperlink title-->
        <Style x:Key="ListBoxTitleHyperlinkGeneral" TargetType="{x:Type Hyperlink}">
            <Setter Property="Foreground" Value="#FF006699"/>
            <Setter Property="TextDecorations" Value="{x:Null}"/>
        </Style>

        <!--TextBlock Run title-->
        <Style x:Key="ListBoxTitleRunGeneral" TargetType="{x:Type Run}">
            <Setter Property="Foreground" Value="#FF006699"/>
        </Style>



        <!-- *******************************
                    LISTBOX PROCESSES
            *********************************-->
        <Style x:Key="ProcessesUnChecked" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <!-- Применяем стили для элементов внутри ListBox -->
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="brd" Background="{TemplateBinding Background}" 
                                          BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter Property="Background" Value="#FFFFEFEF"/>
                                <Setter Property="Foreground" Value="#FF8F0C0C"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Margin" Value="0,0,0,5" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#FFB8B8B8"/>
                                <Setter Property="Foreground" Value="#FF4F4F4F"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Margin" Value="0" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#FFF9C5C5"/>
                                <Setter Property="Foreground" Value="#FF8F0C0C"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="ProcessesChecked" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <!-- Применяем стили для элементов внутри ListBox -->
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="brd" Background="{TemplateBinding Background}" 
                                          BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter Property="Background" Value="Honeydew"/>
                                <Setter Property="Foreground" Value="#FF0C8F12"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Margin" Value="0,0,0,5" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#FFB8B8B8"/>
                                <Setter Property="Foreground" Value="#FF4F4F4F"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Margin" Value="0" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#FFC5F9C5"/>
                                <Setter Property="Foreground" Value="#FF0C8F12"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="ProcessesCheckedGlobal" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <!-- Применяем стили для элементов внутри ListBox -->
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="brd" Background="{TemplateBinding Background}" 
                                          BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter Property="Background" Value="#FFE398FF"/>
                                <Setter Property="Foreground" Value="#FF770C8F"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Margin" Value="0,0,0,5" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#FFB8B8B8"/>
                                <Setter Property="Foreground" Value="#FF4F4F4F"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Margin" Value="0" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#FFCF50FF"/>
                                <Setter Property="Foreground" Value="#FF770C8F"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>




        <!-- *******************************
                    BUTTON OK
            *********************************-->
        <Style x:Key="ButtonOK" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="FontFamily" Value="Verdana"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Padding" Value="15,5,0,5"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Background" Value="{StaticResource BackNormal}" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Width="{TemplateBinding Width}" 
                             Height="{TemplateBinding Height}" ClipToBounds="True">

                            <!-- Inner Rectangle with rounded corners. -->
                            <Rectangle x:Name="innerRectangle" 
                                HorizontalAlignment="Stretch" 
                                VerticalAlignment="Stretch" Stroke="Transparent" 
                                StrokeThickness="0" 
                                Fill="{TemplateBinding Background}"
                                       Cursor="{TemplateBinding Cursor}"/>

                            <!-- Present Content (text) of the button. -->
                            <DockPanel Name="myContentPresenterDockPanel">
                                <ContentPresenter x:Name="myContentPresenter"
                                                  Margin="{TemplateBinding Padding}"
                                                  Content="{TemplateBinding Content}" 
                                                  TextBlock.Foreground="{TemplateBinding Foreground}"
                                                  TextBlock.FontFamily="{TemplateBinding FontFamily}"
                                                  TextBlock.FontSize="{TemplateBinding FontSize}"/>

                                <Image Source="Resources/ok.png"
                                   Width="13"
                                   Height="10"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Right"
                                   Margin="15,0,15,0"/>
                            </DockPanel>
                        </Grid>

                        <!-- Set action triggers for the buttons and define
                             what the button does in response to those triggers. -->
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource BackHover}" />
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{StaticResource BackPressed}" />
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- *******************************
                    BUTTON CLOSE
            *********************************-->
        <Style x:Key="ButtonCLOSE" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="FontFamily" Value="Verdana"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Padding" Value="15,5,0,5"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Background" Value="{StaticResource BackNormal}" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Width="{TemplateBinding Width}" 
                             Height="{TemplateBinding Height}" ClipToBounds="True">

                            <!-- Inner Rectangle with rounded corners. -->
                            <Rectangle x:Name="innerRectangle" 
                                HorizontalAlignment="Stretch" 
                                VerticalAlignment="Stretch" Stroke="Transparent" 
                                StrokeThickness="0" 
                                Fill="{TemplateBinding Background}"
                                       Cursor="{TemplateBinding Cursor}"/>

                            <!-- Present Content (text) of the button. -->
                            <DockPanel Name="myContentPresenterDockPanel">
                                <ContentPresenter x:Name="myContentPresenter"
                                                  Margin="{TemplateBinding Padding}"
                                                  Content="{TemplateBinding Content}" 
                                                  TextBlock.Foreground="{TemplateBinding Foreground}"
                                                  TextBlock.FontFamily="{TemplateBinding FontFamily}"
                                                  TextBlock.FontSize="{TemplateBinding FontSize}"/>

                                <Image Source="Resources/close.png"
                                   Width="13"
                                   Height="10"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Right"
                                   Margin="15,0,15,0"/>
                            </DockPanel>
                        </Grid>

                        <!-- Set action triggers for the buttons and define
                             what the button does in response to those triggers. -->
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource BackHover}" />
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{StaticResource BackPressed}" />
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- *******************************
                    BUTTON ATTACH
            *********************************-->
        <Style x:Key="ButtonATTACH" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="#E52B2B2B"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="FontFamily" Value="Verdana"/>
            <Setter Property="HorizontalContentAlignment" Value="Right"/>

            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Margin="0">
                            <Path Stretch="Fill" x:Name="PlayBackground"
                                    Data="M0,20 L10,10 43,10 L43,20 Z"
                                    Stroke="Black"
                                    StrokeThickness="0"
                                    SnapsToDevicePixels="True"
                                    Cursor="Hand"
                                  Width="21"
                                  Height="21"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"/>

                            <ContentPresenter Name="content" 
                                        HorizontalAlignment="Left" 
                                        VerticalAlignment="Center"
                                        Margin="25,0,0,0"
                                        Cursor="Hand"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="true">
                                <Setter Property="Fill" TargetName="PlayBackground">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Resources/skrepka_normal.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="PlayBackground">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Resources/skrepka_hover.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="PlayBackground">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="Resources/skrepka_pressed.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- *******************************
                    BUTTON ATTACH
            *********************************-->
        <Style x:Key="TextEmail" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="#FF006699"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="11pt"/>
            <Setter Property="FontFamily" Value="Verdana"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>


        <!-- *******************************
                    FEEDBACK TEXT
            *********************************-->
        <Style x:Key="TextFeedback" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="11pt"/>
            <Setter Property="FontFamily" Value="Verdana"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="5"/>
        </Style>


        <!-- *******************************
                    FEEDBACK gbFeedback
            *********************************-->
        <Style x:Key="FeedbackgbFeedback" TargetType="{x:Type GroupBox}">
            <!--<Setter Property="Foreground" Value="#FF303030"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#FF8B8A88"/>
            <Setter Property="Margin" Value="5"/>-->

            <Setter Property="Foreground" Value="#FF303030"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#FF8B8A88"/>
            <Setter Property="Margin" Value="5"/>


            <!--<Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupBox}">
                        <Grid>
                            <Border
                                    BorderThickness="1,1,1,1"
                                    CornerRadius="0,0,0,0">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="#FF8B8A88"/>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1"
                                   MappingMode="RelativeToBoundingBox"
                                   StartPoint="0.5,0">
                                        <GradientStop Color="{DynamicResource ContentAreaColorLight}"
                              Offset="0" />
                                        <GradientStop Color="{DynamicResource ContentAreaColorDark}"
                              Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <ContentPresenter Margin="0" />
                            </Border>

                            <Border 
                                    BorderThickness="0"
                                    HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                    Margin="10,-10,0,0">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="#FF8B8A88"/>
                                </Border.BorderBrush>

                                <Border.Background>
                                    <SolidColorBrush Color="Tomato"/>
                                </Border.Background>

                                <ContentPresenter Margin="5,0"
                                    ContentSource="Header"
                                    RecognizesAccessKey="True"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>-->
        </Style>


        <!-- *******************************
                    Checkbox
            *********************************-->
        <Style TargetType="CheckBox">
            <Setter Property="Foreground" Value="Red"/>
        </Style>


        <!-- *******************************
                    RadioButton
            *********************************-->
        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="Foreground" Value="#FF006699"/>
            <Setter Property="Margin" Value="10,5,5,5"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>

            <Setter Property="Template">
                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid>
                            <Rectangle x:Name="RbImage"
                                       Width="14"
                                       Height="14"
                                       Stretch="Fill"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center">
                                <Rectangle.Fill>
                                    <ImageBrush ImageSource="Resources/checkbox_unactive_unchecked.png"/>
                                </Rectangle.Fill>
                            </Rectangle>

                            <ContentPresenter Margin="20,0,0,0"
                                              Cursor="Hand"/>
                        </Grid>


                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Control.IsEnabled" Value="True" />
                                    <Condition Property="RadioButton.IsChecked" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Rectangle.Fill" TargetName="RbImage">
                                        <Setter.Value>
                                            <ImageBrush ImageSource="Resources/checkbox_unactive_checked.png"/>
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger.Setters>
                            </MultiTrigger>


                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Control.IsEnabled" Value="True" />
                                    <Condition Property="RadioButton.IsChecked" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Rectangle.Fill" TargetName="RbImage">
                                        <Setter.Value>
                                            <ImageBrush ImageSource="Resources/checkbox_unactive_unchecked.png"/>
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger.Setters>
                            </MultiTrigger>


                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Control.IsEnabled" Value="False" />
                                    <Condition Property="RadioButton.IsChecked" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Rectangle.Fill" TargetName="RbImage">
                                        <Setter.Value>
                                            <ImageBrush ImageSource="Resources/checkbox_unactive_checked.png"/>
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger.Setters>
                            </MultiTrigger>


                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Control.IsEnabled" Value="False" />
                                    <Condition Property="RadioButton.IsChecked" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Rectangle.Fill" TargetName="RbImage">
                                        <Setter.Value>
                                            <ImageBrush ImageSource="Resources/checkbox_unactive_unchecked.png"/>
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger.Setters>
                            </MultiTrigger>


                            <!--        MOUSE OVER          -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Control.IsMouseOver" Value="True" />
                                    <Condition Property="RadioButton.IsChecked" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Rectangle.Fill" TargetName="RbImage">
                                        <Setter.Value>
                                            <ImageBrush ImageSource="Resources/checkbox_active_unchecked.png"/>
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger.Setters>
                            </MultiTrigger>


                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Control.IsMouseOver" Value="True" />
                                    <Condition Property="RadioButton.IsChecked" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Rectangle.Fill" TargetName="RbImage">
                                        <Setter.Value>
                                            <ImageBrush ImageSource="Resources/checkbox_active_checked.png"/>
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- *******************************
                    StackPanel Border Shadow
            *********************************-->
        <Style x:Key="BorderShadow" TargetType="{x:Type Border}">
            <Setter Property="BorderBrush" Value="#FFCCCCCB"/>
            <Setter Property="BorderThickness" Value="1,1,0,0"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Grid.ColumnSpan" Value="2"/>
            <Setter Property="Grid.RowSpan" Value="3"/>
        </Style>

        <Style x:Key="BorderShadowSub" TargetType="{x:Type Border}">
            <Setter Property="BorderBrush" Value="#FFE1E1E1"/>
            <Setter Property="BorderThickness" Value="1,1,0,0"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Grid.ColumnSpan" Value="2"/>
            <Setter Property="Grid.RowSpan" Value="3"/>
        </Style>


        <!-- *******************************
                    lSelectCategory
            *********************************-->
        <Style x:Key="lSelectCategory" TargetType="{x:Type Label}">
            <Setter Property="Margin" Value="0"/>

            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <GroupBox Header="{TemplateBinding Content}"
                                  Margin="-5,0"
                                  BorderBrush="#FF8B8A88"
                                  BorderThickness="0,1,0,0"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- *******************************
                    lSetEmail
            *********************************-->
        <Style x:Key="lSetEmail" TargetType="{x:Type Label}">
            <Setter Property="Margin" Value="0"/>

            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <GroupBox Header="{TemplateBinding Content}"
                                  Margin="0"
                                  BorderBrush="#FFCCCCCB"
                                  BorderThickness="0,1,0,0"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- *******************************
                    pbStatus
            *********************************-->
        <Style x:Key="pbStatus" TargetType="{x:Type ProgressBar}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid Height="6"
              Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Determinate" />
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="00:00:00"
                                                 Storyboard.TargetName="PART_Indicator"
                                                 Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <SolidColorBrush>Transparent</SolidColorBrush>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="PART_Track"
                  BorderThickness="0">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="Transparent" />
                                </Border.BorderBrush>
                            </Border>
                            <Border x:Name="PART_Indicator"
                  BorderThickness="0"
                  HorizontalAlignment="Left"
                  Background="{TemplateBinding Foreground}"
                  Margin="0">
                                <Border.BorderBrush>
                                    <LinearGradientBrush StartPoint="0,0"
                                   EndPoint="0,1">
                                        <GradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="{DynamicResource BorderLightColor}"
                                  Offset="0.0" />
                                                <GradientStop Color="{DynamicResource BorderMediumColor}"
                                  Offset="1.0" />
                                            </GradientStopCollection>
                                        </GradientBrush.GradientStops>
                                    </LinearGradientBrush>

                                </Border.BorderBrush>
                                <Grid ClipToBounds="True"
                  x:Name="Animation">
                                    <Rectangle x:Name="PART_GlowRect"
                         Width="100"
                         HorizontalAlignment="Left"
                         Fill="{StaticResource ProgressBarIndicatorAnimatedFill}"
                         Margin="-100,0,0,0" />
                                </Grid>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0,1"
                           StartPoint="0,0">
                        <GradientStop Color="#FF3a3938" Offset="0" />
                        <GradientStop Color="#FFb0afaa" Offset="0.75" />
                        <GradientStop Color="#FF9c9a96" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0,1"
                           StartPoint="0,0">
                        <GradientStop Color="#FFBB3C2C" Offset="0" />
                        <GradientStop Color="#FFB22116" Offset="0.3" />
                        <GradientStop Color="#FFA61F15" Offset="0.7" />
                        <GradientStop Color="#FF7F3329" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- *******************************
                    ScrollBars
            *********************************-->
        <LinearGradientBrush x:Key="ScrollBarsGradient"
                     StartPoint="0,0"
                     EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FF6E6E6E" Offset="0" />
                    <GradientStop Color="#FF979593" Offset="0.35" />
                    <GradientStop Color="#FF979593" Offset="0.65" />
                    <GradientStop Color="#FF6E6E6E" Offset="1" />
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ScrollBarsGradientHoriz"
                     StartPoint="0,1"
                     EndPoint="1,1">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFd8e4fe" Offset="0" />
                    <GradientStop Color="#FF8CB5FD" Offset="0.3" />
                    <GradientStop Color="#FF8CB5FD" Offset="0.7" />
                    <GradientStop Color="#FFD8E4FE" Offset="1" />
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <Style x:Key="ScrollBarPageButtonStyleUp" TargetType="{x:Type RepeatButton}">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border BorderBrush="Transparent" CornerRadius="4,4,0,0" BorderThickness="1,1,1,0" Background="{DynamicResource ScrollBarsGradient}" Width="8"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarPageButtonStyleDown" TargetType="{x:Type RepeatButton}">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border CornerRadius="0,0,4,4" BorderBrush="Transparent" BorderThickness="1,0,1,1" Background="{DynamicResource ScrollBarsGradient}" Width="8"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Margin" Value="1,0" />
            <Setter Property="Width" Value="8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid>
                            <Border BorderBrush="#FF65B4fC" BorderThickness="1" CornerRadius="4" Background="White" Padding="0" Margin="0">
                                <Border BorderBrush="White" BorderThickness="1" CornerRadius="4" Background="{DynamicResource ScrollBarsGradientHoriz}" Margin="0">
                                    <Border.OpacityMask>
                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                            <GradientStop Color="Black" Offset="1"/>
                                            <GradientStop Color="Transparent"/>
                                        </LinearGradientBrush>
                                    </Border.OpacityMask>
                                    <Border.BitmapEffect>
                                        <BlurBitmapEffect Radius="2"/>
                                    </Border.BitmapEffect>
                                </Border>
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="6" Opacity="0.8" ShadowDepth="0"/>
                                </Border.Effect>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Track Name="PART_Track"
                   IsDirectionReversed="True">
                    <!--<Track.DecreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButtonStyleUp}">
                        </RepeatButton>
                    </Track.DecreaseRepeatButton>-->
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumbStyle}"/>
                    </Track.Thumb>
                    <!--<Track.IncreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButtonStyleDown}">
                        </RepeatButton>
                    </Track.IncreaseRepeatButton>-->
                </Track>
            </Grid>
        </ControlTemplate>

        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Template" Value="{StaticResource VerticalScrollBar}"/>
        </Style>






        <!-- *******************************
                    SETTINGS PAGE
            *********************************-->
        <Style x:Key="bChangeSettingsPage" TargetType="{x:Type Button}">
            <Setter Property="Cursor" Value="Hand"/>

            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Margin="0">
                            <Rectangle x:Name="RbImage"
                                       Width="6"
                                       Height="9"
                                       Stretch="Fill"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center">
                                <Rectangle.Fill>
                                    <ImageBrush ImageSource="Resources/arrow.png"/>
                                </Rectangle.Fill>
                            </Rectangle>
                            
                            <ContentPresenter Name="content" 
                                        HorizontalAlignment="Stretch" 
                                        VerticalAlignment="Stretch"
                                        Margin="10,0,0,0"
                                        Cursor="Hand"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        

    </Application.Resources>
</Application>
