<Application x:Class="WPF_Multipack_Launcher.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <LinearGradientBrush x:Key="GradientButton" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#FF3A3A3A" Offset="0"/>
            <GradientStop Color="#FF282828" Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="GradientButtonHover" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#FF444444" Offset="0"/>
            <GradientStop Color="#FF282828" Offset="1" />
        </LinearGradientBrush>

        
        <Style TargetType="{x:Type Button}">
            <Setter Property="Width" Value="150"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Background" Value="{StaticResource GradientButton}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" ClipToBounds="True">
                            <!-- Inner Rectangle with rounded corners. -->
                            <Rectangle x:Name="innerRectangle" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stroke="Transparent" StrokeThickness="1" Fill="{TemplateBinding Background}" RadiusX="5" RadiusY="5" />
                            
                            <!-- Present Text of the button. -->
                            <DockPanel Name="myContentPresenterDockPanel">
                                <ContentPresenter x:Name="myContentPresenter" Margin="5" Content="{TemplateBinding  Content}" TextBlock.FontFamily="Sochi2014" TextBlock.Foreground="#FFF37B10" TextBlock.FontSize="16" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </DockPanel>
                        </Grid>

                        <!-- Triggers -->
                        <ControlTemplate.Triggers>
                            <!-- Set properties when mouse pointer is over the button. -->
                            <Trigger Property="IsMouseOver" Value="True">                                                                
                                <!-- Makes the text slightly blurry as though you were looking at it through blurry glass. -->
                                <Setter Property="Background" Value="{StaticResource GradientButtonHover}" />
                            </Trigger>

                            <!-- Set properties when button has focus. -->
                            <Trigger Property="IsFocused" Value="true">
                                <Setter Property="Background" Value="#FF3A3A3A"/>
                            </Trigger>
                            
                            <!-- Set properties when button has unavailable -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#FF282828"/>
                                <Setter Property="{TemplateBinding Property=myContentPresenter}" Value="#FFFFFFFF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value> 
            </Setter>
        </Style>


        <Style TargetType="{x:Type Label}">
            <Setter Property="FontFamily" Value="Sochi2014"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="#FFF37B10"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
    </Application.Resources>
</Application>
